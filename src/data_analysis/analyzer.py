#!/usr/bin/python3
class SecurityRiskAnalyzer:
    def __init__(self):
        self.known_risks = {
            22: {"service": "SSH", "risk": "Kan vara sårbar för brute-force-attacker."},
            23: {"service": "Telnet", "risk": "Osäkert protokoll som bör undvikas till förmån för SSH."},
            80: {"service": "HTTP", "risk": "Klartextöverföring. Använd HTTPS för krypterad kommunikation."},
            445: {"service": "SMB", "risk": "Kan vara sårbar för olika attacker som EternalBlue."},
            3389: {"service": "RDP", "risk": "Bör begränsas till pålitliga nätverk. Kan vara sårbar för Man-in-the-Middle-attacker."},
        }

    def analyze_open_ports(self, open_ports):
        analysis_results = {}
        for ip, ports in open_ports.items():
            risks = [f"Port {port} ({self.known_risks[port]['service']}): {self.known_risks[port]['risk']}"
                     for port in ports if port in self.known_risks]
            if risks:
                analysis_results[ip] = risks
        return analysis_results

