#!/usr/bin/python3

import socket
import ipaddress
from concurrent.futures import ThreadPoolExecutor

def scan_port(ip, port):
    """Försöker ansluta till en specifik port på en given IP-adress."""
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(1)  # Sätter en timeout för anslutningsförsöket
            result = sock.connect_ex((ip, port))
            if result == 0:
                return True
    except socket.error:
        pass
    return False

def scan_subnet(subnet, start_port, end_port, max_workers=100):
    """Skannar ett subnet för öppna portar inom ett angivet portintervall."""
    network = ipaddress.ip_network(subnet, strict=False)
    open_ports = {}

    with ThreadPoolExecutor(max_workers=max_workers) as executor:
        future_to_ip_port = {
            executor.submit(scan_port, str(ip), port): (str(ip), port)
            for ip in network.hosts()
            for port in range(start_port, end_port + 1)
        }
        for future in future_to_ip_port:
            ip, port = future_to_ip_port[future]
            if future.result():
                if ip not in open_ports:
                    open_ports[ip] = []
                open_ports[ip].append(port)

    return open_ports

